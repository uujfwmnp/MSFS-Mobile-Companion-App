// use this file to add your user-defined events
// remove the .inactive extension
// afterwards, the file will not be touched by the next MobiFlight update
// JF Warrior
JF_WARRIOR_AUTOPILOT_MODE_HDG#(L:AUTOPILOT_hdg)
JF_WARRIOR_AUTOPILOT_MODE_NAV#(L:AUTOPILOT_nav)
JF_WARRIOR_AUTOPILOT_MODE_APR#(L:AUTOPILOT_apr)
JF_WARRIOR_AUTOPILOT_MODE_LOCREV#(L:AUTOPILOT_rev)
JF_WARRIOR_AUTOPILOT_HDG_ON#1 (>L:AUTOPILOT_hdg)
JF_WARRIOR_AUTOPILOT_HDG_OFF#2 (>L:AUTOPILOT_hdg)
JF_WARRIOR_AUTOPILOT_HDG_Toggle#(L:AUTOPILOT_hdg,bool) ! (>L:AUTOPILOT_hdg,bool)
JF_WARRIOR_AUTOPILOT_HDG_ToggleAlt#(L:AUTOPILOT_hdg) 1 == if{ 1 if{ 0 (>L:AUTOPILOT_hdg) } } els{ (L:AUTOPILOT_hdg) 0 == if{ 1 if{ 1 (>L:AUTOPILOT_hdg) } } }
JF_WARRIOR_DME_NAV1#0 (>L:RIGHT_MISC_dme_nav)
JF_WARRIOR_DME_NAV2#1 (>L:RIGHT_MISC_dme_nav)
JF_WARRIOR_KX170_NAV1_OUTER_KNOB_PLUS#(L:KX170_NAV1_outer_knob) 100 < if{ 1 if{ (L:KX170_NAV1_outer_knob) ++ (>L:KX170_NAV1_outer_knob) } } els{ (L:KX170_NAV1_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX170_NAV1_outer_knob) } } }
JF_WARRIOR_KX170_NAV1_OUTER_KNOB_MINUS#(L:KX170_NAV1_outer_knob) 0 >= if{ 1 if{ (L:KX170_NAV1_outer_knob) -- (>L:KX170_NAV1_outer_knob) } } els{ (L:KX170_NAV1_outer_knob) 0 < if{ 1 if{ 99 (>L:KX170_NAV1_outer_knob) } } }
JF_WARRIOR_KX170_NAV1_INNER_KNOB_PLUS#(L:KX170_NAV1_inner_knob) 100 < if{ 1 if{ (L:KX170_NAV1_inner_knob) ++ (>L:KX170_NAV1_inner_knob) } } els{ (L:KX170_NAV1_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX170_NAV1_inner_knob) } } }
JF_WARRIOR_KX170_NAV1_INNER_KNOB_MINUS#(L:KX170_NAV1_inner_knob) 0 >= if{ 1 if{ (L:KX170_NAV1_inner_knob) -- (>L:KX170_NAV1_inner_knob) } } els{ (L:KX170_NAV1_inner_knob) 0 < if{ 1 if{ 99 (>L:KX170_NAV1_inner_knob) } } }
JF_WARRIOR_KX175_NAV2_OUTER_KNOB_PLUS#(L:KX175_NAV2_outer_knob) 100 < if{ 1 if{ (L:KX175_NAV2_outer_knob) ++ (>L:KX175_NAV2_outer_knob) } } els{ (L:KX175_NAV2_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX175_NAV2_outer_knob) } } }
JF_WARRIOR_KX175_NAV2_OUTER_KNOB_MINUS#(L:KX175_NAV2_outer_knob) 0 >= if{ 1 if{ (L:KX175_NAV2_outer_knob) -- (>L:KX175_NAV2_outer_knob) } } els{ (L:KX175_NAV2_outer_knob) 0 < if{ 1 if{ 99 (>L:KX175_NAV2_outer_knob) } } }
JF_WARRIOR_KX175_NAV2_INNER_KNOB_PLUS#(L:KX175_NAV2_inner_knob) 100 < if{ 1 if{ (L:KX175_NAV2_inner_knob) ++ (>L:KX175_NAV2_inner_knob) } } els{ (L:KX175_NAV2_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX175_NAV2_inner_knob) } } }
JF_WARRIOR_KX175_NAV2_INNER_KNOB_MINUS#(L:KX175_NAV2_inner_knob) 0 >= if{ 1 if{ (L:KX175_NAV2_inner_knob) -- (>L:KX175_NAV2_inner_knob) } } els{ (L:KX175_NAV2_inner_knob) 0 < if{ 1 if{ 99 (>L:KX175_NAV2_inner_knob) } } }
JF_WARRIOR_KX170_COMM1_OUTER_KNOB_PLUS#(L:KX170_COMM1_outer_knob) 100 < if{ 1 if{ (L:KX170_COMM1_outer_knob) ++ (>L:KX170_COMM1_outer_knob) } } els{ (L:KX170_COMM1_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX170_COMM1_outer_knob) } } }
JF_WARRIOR_KX170_COMM1_OUTER_KNOB_MINUS#(L:KX170_COMM1_outer_knob) 0 >= if{ 1 if{ (L:KX170_COMM1_outer_knob) -- (>L:KX170_COMM1_outer_knob) } } els{ (L:KX170_COMM1_outer_knob) 0 < if{ 1 if{ 99 (>L:KX170_COMM1_outer_knob) } } }
JF_WARRIOR_KX170_COMM1_INNER_KNOB_PLUS#(L:KX170_COMM1_inner_knob) 100 < if{ 1 if{ (L:KX170_COMM1_inner_knob) ++ (>L:KX170_COMM1_inner_knob) } } els{ (L:KX170_COMM1_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX170_COMM1_inner_knob) } } }
JF_WARRIOR_KX170_COMM1_INNER_KNOB_MINUS#(L:KX170_COMM1_inner_knob) 0 >= if{ 1 if{ (L:KX170_COMM1_inner_knob) -- (>L:KX170_COMM1_inner_knob) } } els{ (L:KX170_COMM1_inner_knob) 0 < if{ 1 if{ 99 (>L:KX170_COMM1_inner_knob) } } }
JF_WARRIOR_KX175_COMM2_OUTER_KNOB_PLUS#(L:KX175_COMM2_outer_knob) 100 < if{ 1 if{ (L:KX175_COMM2_outer_knob) ++ (>L:KX175_COMM2_outer_knob) } } els{ (L:KX175_COMM2_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX175_COMM2_outer_knob) } } }
JF_WARRIOR_KX175_COMM2_OUTER_KNOB_MINUS#(L:KX175_COMM2_outer_knob) 0 >= if{ 1 if{ (L:KX175_COMM2_outer_knob) -- (>L:KX175_COMM2_outer_knob) } } els{ (L:KX175_COMM2_outer_knob) 0 < if{ 1 if{ 99 (>L:KX175_COMM2_outer_knob) } } }
JF_WARRIOR_KX175_COMM2_INNER_KNOB_PLUS#(L:KX175_COMM2_inner_knob) 100 < if{ 1 if{ (L:KX175_COMM2_inner_knob) ++ (>L:KX175_COMM2_inner_knob) } } els{ (L:KX175_COMM2_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX175_COMM2_inner_knob) } } }
JF_WARRIOR_KX175_COMM2_INNER_KNOB_MINUS#(L:KX175_COMM2_inner_knob) 0 >= if{ 1 if{ (L:KX175_COMM2_inner_knob) -- (>L:KX175_COMM2_inner_knob) } } els{ (L:KX175_COMM2_inner_knob) 0 < if{ 1 if{ 99 (>L:KX175_COMM2_inner_knob) } } }
JF_WARRIOR_COM_TRANSMIT_toggle#(L:KMA20_knob) 1 == if{ 1 if{ 0 (>L:KMA20_knob) } } els{ (L:KMA20_knob) 0 == if{ 1 if{ 1 (>L:KMA20_knob) } } }
JF_WARRIOR_COM1_TRANSMIT#0 (>L:KMA20_knob)
JF_WARRIOR_COM2_TRANSMIT#1 (>L:KMA20_knob)
JF_WARRIOR_AUTOPILOT_SOURCE_NAV1#0 (>L:AUTOPILOT_nav)
JF_WARRIOR_AUTOPILOT_SOURCE_NAV2#2 (>L:AUTOPILOT_nav)
JF_WARRIOR_AUTOPILOT_SOURCE_OFF#1 (>L:AUTOPILOT_nav)
JF_WARRIOR_FUEL_SELECT_cut#0 (>L:LEFT_MISC_fuel_sel)
JF_WARRIOR_FUEL_SELECT_left#1 (>L:LEFT_MISC_fuel_sel)
JF_WARRIOR_FUEL_SELECT_right#2 (>L:LEFT_MISC_fuel_sel)
JF_WARRIOR_FLIGHT_BAG_toggle#(L:RIGHT_MISC_icomm,bool) ! (>L:RIGHT_MISC_icomm,bool)
JF_WARRIOR_LIGHTS_BCN_toggle#(L:CENTRE_LOWER_bcn_light,bool) ! (>L:CENTRE_LOWER_bcn_light,bool)
JF_WARRIOR_LIGHTS_BCN_on#1 (>L:CENTRE_LOWER_bcn_light)
JF_WARRIOR_LIGHTS_BCN_off#0 (>L:CENTRE_LOWER_bcn_light)
JF_WARRIOR_LIGHTS_PANEL_toggle#(L:CENTRE_LOWER_panel_light) 1 == if{ 1 if{ 0 (>L:CENTRE_LOWER_panel_light) } } els{ (L:CENTRE_LOWER_panel_light) 0 == if{ 1 if{ 1 (>L:CENTRE_LOWER_panel_light) } } } (L:CENTRE_LOWER_panel_light_on) 1 == if{ 1 if{ 0 (>L:CENTRE_LOWER_panel_light_on) } } els{ (L:CENTRE_LOWER_panel_light_on) 0 == if{ 1 if{ 1 (>L:CENTRE_LOWER_panel_light_on) } } } (L:Panel_light_scaler) 0.1 == if{ 1 if{ 0 (>L:Panel_light_scaler) } } els{ (L:Panel_light_scaler) 0 == if{ 1 if{ 0.1 (>L:Panel_light_scaler) } } }
JF_WARRIOR_FUEL_PUMP_toggle#(L:CENTRE_LOWER_fuelpump, bool) ! (>L:CENTRE_LOWER_fuelpump, bool)
JF_WARRIOR_PITOT_HEAT_toggle#(L:CENTRE_LOWER_pitotheat,bool) ! (>L:CENTRE_LOWER_pitotheat,bool)
JF_WARRIOR_GPS100_RTE_press#1 (>L:GPS100_RTE)
JF_WARRIOR_GPS100_RTE_release#0 (>L:GPS100_RTE)
JF_WARRIOR_GPS100_WPT_press#1 (>L:GPS100_WPT)
JF_WARRIOR_GPS100_WPT_release#0 (>L:GPS100_WPT)
JF_WARRIOR_GPS100_NAV_press#1 (>L:GPS100_NAV)
JF_WARRIOR_GPS100_NAV_release#0 (>L:GPS100_NAV)
JF_WARRIOR_GPS100_LEFT_press#0 (>L:GPS100_ARROWS)
JF_WARRIOR_GPS100_CENTER#1 (>L:GPS100_ARROWS)
JF_WARRIOR_GPS100_RIGHT_press#2 (>L:GPS100_ARROWS)
JF_WARRIOR_NAVGPS#(L:LEFT_MISC_navgps,bool) ! (>L:LEFT_MISC_navgps,bool)

// JF Arrow
JF_ARROW_AUTOPILOT_MODE_NAV#0 (>L:AUTOPILOT_mode)
JF_ARROW_AUTOPILOT_MODE_OMNI#1 (>L:AUTOPILOT_mode)
JF_ARROW_AUTOPILOT_MODE_HDG#2 (>L:AUTOPILOT_mode)
JF_ARROW_AUTOPILOT_MODE_LOCNOMR#3 (>L:AUTOPILOT_mode)
JF_ARROW_AUTOPILOT_MODE_LOCREV#4 (>L:AUTOPILOT_mode)
JF_ARROW_AUTOPILOT_HDG_ON#1 (>L:AUTOPILOT_hdg)
JF_ARROW_AUTOPILOT_HDG_OFF#2 (>L:AUTOPILOT_hdg)
JF_ARROW_AUTOPILOT_HDG_Toggle#(L:AUTOPILOT_hdg,bool) ! (>L:AUTOPILOT_hdg,bool)
JF_ARROW_AUTOPILOT_HDG_ToggleAlt#(L:AUTOPILOT_hdg) 1 == if{ 1 if{ 0 (>L:AUTOPILOT_hdg) } } els{ (L:AUTOPILOT_hdg) 0 == if{ 1 if{ 1 (>L:AUTOPILOT_hdg) } } }
JF_ARROW_DME_NAV1#0 (>L:RIGHT_MISC_dme_nav)
JF_ARROW_DME_NAV2#1 (>L:RIGHT_MISC_dme_nav)
JF_ARROW_KX170_NAV1_OUTER_KNOB_PLUS#(L:KX170_NAV1_outer_knob) 100 < if{ 1 if{ (L:KX170_NAV1_outer_knob) ++ (>L:KX170_NAV1_outer_knob) } } els{ (L:KX170_NAV1_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX170_NAV1_outer_knob) } } }
JF_ARROW_KX170_NAV1_OUTER_KNOB_MINUS#(L:KX170_NAV1_outer_knob) 0 >= if{ 1 if{ (L:KX170_NAV1_outer_knob) -- (>L:KX170_NAV1_outer_knob) } } els{ (L:KX170_NAV1_outer_knob) 0 < if{ 1 if{ 99 (>L:KX170_NAV1_outer_knob) } } }
JF_ARROW_KX170_NAV1_INNER_KNOB_PLUS#(L:KX170_NAV1_inner_knob) 100 < if{ 1 if{ (L:KX170_NAV1_inner_knob) ++ (>L:KX170_NAV1_inner_knob) } } els{ (L:KX170_NAV1_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX170_NAV1_inner_knob) } } }
JF_ARROW_KX170_NAV1_INNER_KNOB_MINUS#(L:KX170_NAV1_inner_knob) 0 >= if{ 1 if{ (L:KX170_NAV1_inner_knob) -- (>L:KX170_NAV1_inner_knob) } } els{ (L:KX170_NAV1_inner_knob) 0 < if{ 1 if{ 99 (>L:KX170_NAV1_inner_knob) } } }
JF_ARROW_KX175_NAV2_OUTER_KNOB_PLUS#(L:KX175_NAV2_outer_knob) 100 < if{ 1 if{ (L:KX175_NAV2_outer_knob) ++ (>L:KX175_NAV2_outer_knob) } } els{ (L:KX175_NAV2_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX175_NAV2_outer_knob) } } }
JF_ARROW_KX175_NAV2_OUTER_KNOB_MINUS#(L:KX175_NAV2_outer_knob) 0 >= if{ 1 if{ (L:KX175_NAV2_outer_knob) -- (>L:KX175_NAV2_outer_knob) } } els{ (L:KX175_NAV2_outer_knob) 0 < if{ 1 if{ 99 (>L:KX175_NAV2_outer_knob) } } }
JF_ARROW_KX175_NAV2_INNER_KNOB_PLUS#(L:KX175_NAV2_inner_knob) 100 < if{ 1 if{ (L:KX175_NAV2_inner_knob) ++ (>L:KX175_NAV2_inner_knob) } } els{ (L:KX175_NAV2_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX175_NAV2_inner_knob) } } }
JF_ARROW_KX175_NAV2_INNER_KNOB_MINUS#(L:KX175_NAV2_inner_knob) 0 >= if{ 1 if{ (L:KX175_NAV2_inner_knob) -- (>L:KX175_NAV2_inner_knob) } } els{ (L:KX175_NAV2_inner_knob) 0 < if{ 1 if{ 99 (>L:KX175_NAV2_inner_knob) } } }
JF_ARROW_KX170_COMM1_OUTER_KNOB_PLUS#(L:KX170_COMM1_outer_knob) 100 < if{ 1 if{ (L:KX170_COMM1_outer_knob) ++ (>L:KX170_COMM1_outer_knob) } } els{ (L:KX170_COMM1_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX170_COMM1_outer_knob) } } }
JF_ARROW_KX170_COMM1_OUTER_KNOB_MINUS#(L:KX170_COMM1_outer_knob) 0 >= if{ 1 if{ (L:KX170_COMM1_outer_knob) -- (>L:KX170_COMM1_outer_knob) } } els{ (L:KX170_COMM1_outer_knob) 0 < if{ 1 if{ 99 (>L:KX170_COMM1_outer_knob) } } }
JF_ARROW_KX170_COMM1_INNER_KNOB_PLUS#(L:KX170_COMM1_inner_knob) 100 < if{ 1 if{ (L:KX170_COMM1_inner_knob) ++ (>L:KX170_COMM1_inner_knob) } } els{ (L:KX170_COMM1_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX170_COMM1_inner_knob) } } }
JF_ARROW_KX170_COMM1_INNER_KNOB_MINUS#(L:KX170_COMM1_inner_knob) 0 >= if{ 1 if{ (L:KX170_COMM1_inner_knob) -- (>L:KX170_COMM1_inner_knob) } } els{ (L:KX170_COMM1_inner_knob) 0 < if{ 1 if{ 99 (>L:KX170_COMM1_inner_knob) } } }
JF_ARROW_KX175_COMM2_OUTER_KNOB_PLUS#(L:KX175_COMM2_outer_knob) 100 < if{ 1 if{ (L:KX175_COMM2_outer_knob) ++ (>L:KX175_COMM2_outer_knob) } } els{ (L:KX175_COMM2_outer_knob) 100 >= if{ 1 if{ 0 (>L:KX175_COMM2_outer_knob) } } }
JF_ARROW_KX175_COMM2_OUTER_KNOB_MINUS#(L:KX175_COMM2_outer_knob) 0 >= if{ 1 if{ (L:KX175_COMM2_outer_knob) -- (>L:KX175_COMM2_outer_knob) } } els{ (L:KX175_COMM2_outer_knob) 0 < if{ 1 if{ 99 (>L:KX175_COMM2_outer_knob) } } }
JF_ARROW_KX175_COMM2_INNER_KNOB_PLUS#(L:KX175_COMM2_inner_knob) 100 < if{ 1 if{ (L:KX175_COMM2_inner_knob) ++ (>L:KX175_COMM2_inner_knob) } } els{ (L:KX175_COMM2_inner_knob) 100 >= if{ 1 if{ 0 (>L:KX175_COMM2_inner_knob) } } }
JF_ARROW_KX175_COMM2_INNER_KNOB_MINUS#(L:KX175_COMM2_inner_knob) 0 >= if{ 1 if{ (L:KX175_COMM2_inner_knob) -- (>L:KX175_COMM2_inner_knob) } } els{ (L:KX175_COMM2_inner_knob) 0 < if{ 1 if{ 99 (>L:KX175_COMM2_inner_knob) } } }
JF_ARROW_COM_TRANSMIT_toggle#(L:KMA20_knob) 1 == if{ 1 if{ 0 (>L:KMA20_knob) } } els{ (L:KMA20_knob) 0 == if{ 1 if{ 1 (>L:KMA20_knob) } } }
JF_ARROW_COM1_TRANSMIT#0 (>L:KMA20_knob)
JF_ARROW_COM2_TRANSMIT#1 (>L:KMA20_knob)
JF_ARROW_AUTOPILOT_ROLL_30L#0 (>L:AUTOPILOT_roll) -30 (>L:AUTOPILOT_roll_tooltip)
JF_ARROW_AUTOPILOT_ROLL_20L#10 (>L:AUTOPILOT_roll) -20 (>L:AUTOPILOT_roll_tooltip)
JF_ARROW_AUTOPILOT_ROLL_10L#20 (>L:AUTOPILOT_roll) -10 (>L:AUTOPILOT_roll_tooltip)
JF_ARROW_AUTOPILOT_ROLL_0#30 (>L:AUTOPILOT_roll) 0 (>L:AUTOPILOT_roll_tooltip
JF_ARROW_AUTOPILOT_ROLL_10R#40 (>L:AUTOPILOT_roll) 10 (>L:AUTOPILOT_roll_tooltip))
JF_ARROW_AUTOPILOT_ROLL_20R#50 (>L:AUTOPILOT_roll) 20 (>L:AUTOPILOT_roll_tooltip))
JF_ARROW_AUTOPILOT_ROLL_30R#60 (>L:AUTOPILOT_roll) 30 (>L:AUTOPILOT_roll_tooltip))
JF_ARROW_AUTOPILOT_SOURCE_NAV1#0 (>L:AUTOPILOT_nav)
JF_ARROW_AUTOPILOT_SOURCE_NAV2#2 (>L:AUTOPILOT_nav)
JF_ARROW_AUTOPILOT_SOURCE_OFF#1 (>L:AUTOPILOT_nav)
JF_ARROW_FUEL_SELECT_cut#0 (>L:LEFT_MISC_fuel_sel)
JF_ARROW_FUEL_SELECT_left#1 (>L:LEFT_MISC_fuel_sel)
JF_ARROW_FUEL_SELECT_right#2 (>L:LEFT_MISC_fuel_sel)
JF_ARROW_FLIGHT_BAG_toggle#(L:RIGHT_MISC_icomm,bool) ! (>L:RIGHT_MISC_icomm,bool)
JF_ARROW_LIGHTS_BCN_toggle#(L:CENTRE_LOWER_bcn_light,bool) ! (>L:CENTRE_LOWER_bcn_light,bool)
JF_ARROW_LIGHTS_BCN_on#1 (>L:CENTRE_LOWER_bcn_light)
JF_ARROW_LIGHTS_BCN_off#0 (>L:CENTRE_LOWER_bcn_light)
JF_ARROW_LIGHTS_PANEL_toggle#(L:CENTRE_LOWER_panel_light) 1 == if{ 1 if{ 0 (>L:CENTRE_LOWER_panel_light) } } els{ (L:CENTRE_LOWER_panel_light) 0 == if{ 1 if{ 1 (>L:CENTRE_LOWER_panel_light) } } } (L:CENTRE_LOWER_panel_light_on) 1 == if{ 1 if{ 0 (>L:CENTRE_LOWER_panel_light_on) } } els{ (L:CENTRE_LOWER_panel_light_on) 0 == if{ 1 if{ 1 (>L:CENTRE_LOWER_panel_light_on) } } } (L:Panel_light_scaler) 0.1 == if{ 1 if{ 0 (>L:Panel_light_scaler) } } els{ (L:Panel_light_scaler) 0 == if{ 1 if{ 0.1 (>L:Panel_light_scaler) } } }
JF_ARROW_PITOT_HEAT_toggle#(L:CENTRE_LOWER_pitotheat,bool) ! (>L:CENTRE_LOWER_pitotheat,bool)
JF_ARROW_GPS100_RTE_press#1 (>L:GPS100_RTE)
JF_ARROW_GPS100_RTE_release#0 (>L:GPS100_RTE)
JF_ARROW_GPS100_WPT_press#1 (>L:GPS100_WPT)
JF_ARROW_GPS100_WPT_release#0 (>L:GPS100_WPT)
JF_ARROW_GPS100_NAV_press#1 (>L:GPS100_NAV)
JF_ARROW_GPS100_NAV_release#0 (>L:GPS100_NAV)
JF_ARROW_GPS100_LEFT_press#0 (>L:GPS100_ARROWS)
JF_ARROW_GPS100_CENTER#1 (>L:GPS100_ARROWS)
JF_ARROW_GPS100_RIGHT_press#2 (>L:GPS100_ARROWS)
JF_ARROW_NAVGPS#(L:LEFT_MISC_navgps,bool) ! (>L:LEFT_MISC_navgps,bool)
// A32NX FBW
A32NX_PROBE_WINDOW_HEAT_OFF#0 (>L:A32NX_MAN_PITOT_HEAT)
A32NX_PROBE_WINDOW_HEAT_ON#1 (>L:A32NX_MAN_PITOT_HEAT)
A32NX_PROBE_WINDOW_HEAT_toggle#(L:A32NX_MAN_PITOT_HEAT,bool) ! (>L:A32NX_MAN_PITOT_HEAT,bool)
A32NX_AUTOPILOT_LOC_MODE_toggle#(L:A32NX_AUTOPILOT_LOC_MODE, bool) if{ 0 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_LOC_HOLD_OFF) } els{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) 1 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_APR_HOLD_OFF) (>K:AP_LOC_HOLD_ON) }
A32NX_AUTOPILOT_APPR_MODE_toggle#(L:A32NX_AUTOPILOT_APPR_MODE, bool) if{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) (>K:AP_APR_HOLD_OFF) } els{ 1 (>L:A32NX_AUTOPILOT_APPR_MODE) 0 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_LOC_HOLD_OFF) (>K:AP_APR_HOLD_ON) }
// AS CRJ 550/700
ASCRJ_LSP_BRG1#1 (>L:ASCRJ_LSP_BRG1_BTN_ANIM) 1 (>L:ASCRJ_LSP_BRG1)
ASCRJ_LSP_BRG1_rel#0 (>L:ASCRJ_LSP_BRG1_BTN_ANIM)
ASCRJ_LSP_BRG2#1 (>L:ASCRJ_LSP_BRG2_BTN_ANIM) 1 (>L:ASCRJ_LSP_BRG2)
ASCRJ_LSP_BRG2_rel#0 (>L:ASCRJ_LSP_BRG2_BTN_ANIM)
ASCRJ_LSP_FORMAT_right#1 (>L:ASCRJ_LSP_FORMAT_CHANGE) (L:ASCRJ_LSP_FORMAT) 350 < if{ 1 if{ (L:ASCRJ_LSP_FORMAT) 10 + (>L:ASCRJ_LSP_FORMAT) } } els{ (L:ASCRJ_LSP_FORMAT) 350 >= if{ 1 if{ 0 (>L:ASCRJ_LSP_FORMAT) } } }
ASCRJ_LSP_FORMAT_left#-1 (>L:ASCRJ_LSP_FORMAT_CHANGE) (L:ASCRJ_LSP_FORMAT) 10 >= if{ 1 if{ (L:ASCRJ_LSP_FORMAT) 10 - (>L:ASCRJ_LSP_FORMAT) } } els{ (L:ASCRJ_LSP_FORMAT) 10 < if{ 1 if{ 350 (>L:ASCRJ_LSP_FORMAT) } } }
ASCRJ_LSP_RANGE_right#1 (>L:ASCRJ_LSP_RANGE_CHANGE) (L:ASCRJ_LSP_RANGE) 350 < if{ 1 if{ (L:ASCRJ_LSP_RANGE) 10 + (>L:ASCRJ_LSP_RANGE) } } els{ (L:ASCRJ_LSP_RANGE) 350 >= if{ 1 if{ 0 (>L:ASCRJ_LSP_RANGE) } } }
ASCRJ_LSP_RANGE_left#-1 (>L:ASCRJ_LSP_RANGE_CHANGE) (L:ASCRJ_LSP_RANGE) 10 >= if{ 1 if{ (L:ASCRJ_LSP_RANGE) 10 - (>L:ASCRJ_LSP_RANGE) } } els{ (L:ASCRJ_LSP_RANGE) 10 < if{ 1 if{ 350 (>L:ASCRJ_LSP_RANGE) } } }
ASCRJ_LSP_RDR#1 (>L:ASCRJ_LSP_RDR) 1 (>L:ASCRJ_LSP_RDR_BTN_ANIM)
ASCRJ_LSP_RDR_rel#0 (>L:ASCRJ_LSP_RDR_BTN_ANIM)
ASCRJ_LSP_TFC#1 (>L:ASCRJ_LSP_TERR) 1 (>L:ASCRJ_LSP_TERR_BTN_ANIM)
ASCRJ_LSP_TFC_rel#0 (>L:ASCRJ_LSP_TERR_BTN_ANIM)
ASCRJ_LSP_NAV_SOURCE_right#1 (>L:ASCRJ_LSP_NAV_SOURCE_CHANGE) (L:ASCRJ_LSP_NAV_SOURCE) 350 < if{ 1 if{ (L:ASCRJ_LSP_NAV_SOURCE) 10 + (>L:ASCRJ_LSP_NAV_SOURCE) } } els{ (L:ASCRJ_LSP_NAV_SOURCE) 350 >= if{ 1 if{ 0 (>L:ASCRJ_LSP_NAV_SOURCE) } } }
ASCRJ_LSP_NAV_SOURCE_left#-1 (>L:ASCRJ_LSP_NAV_SOURCE_CHANGE) (L:ASCRJ_LSP_NAV_SOURCE) 10 >= if{ 1 if{ (L:ASCRJ_LSP_NAV_SOURCE) 10 - (>L:ASCRJ_LSP_NAV_SOURCE) } } els{ (L:ASCRJ_LSP_NAV_SOURCE) 10 < if{ 1 if{ 350 (>L:ASCRJ_LSP_NAV_SOURCE) } } }
ASCRJ_LSP_NAV_SOURCE_XSIDE#1 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE) 1 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE_BTN_ANIM)
ASCRJ_LSP_NAV_SOURCE_XSIDE_rel#0 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE_BTN_ANIM)
ASCRJ_LSP_SEL#1 (>L:ASCRJ_LSP_SEL) 1 (>L:ASCRJ_LSP_SEL_BTN_ANIM)
ASCRJ_LSP_SEL_rel#0 (>L:ASCRJ_LSP_SEL_BTN_ANIM)
ASCRJ_LSP_TGT#0 (>L:ASCRJ_LSP_SPEED_MODE)
ASCRJ_LSP_VSPD#1 (>L:ASCRJ_LSP_SPEED_MODE)
ASCRJ_LSP_SPEED_SEL_right#1 (>L:ASCRJ_LSP_SPEED_SEL_CHANGE) (L:ASCRJ_LSP_SPEED_SEL) 350 < if{ 1 if{ (L:ASCRJ_LSP_SPEED_SEL) 10 + (>L:ASCRJ_LSP_SPEED_SEL) } } els{ (L:ASCRJ_LSP_SPEED_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_LSP_SPEED_SEL) } } }
ASCRJ_LSP_SPEED_SEL_left#-1 (>L:ASCRJ_LSP_SPEED_SEL_CHANGE) (L:ASCRJ_LSP_SPEED_SEL) 10 >= if{ 1 if{ (L:ASCRJ_LSP_SPEED_SEL) 10 - (>L:ASCRJ_LSP_SPEED_SEL) } } els{ (L:ASCRJ_LSP_SPEED_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_LSP_SPEED_SEL) } } }
ASCRJ_LSP_SPEED_SET#1 (>L:ASCRJ_LSP_SPEED_SET) 1 (>L:ASCRJ_LSP_SPEED_SEL_ANIM)
ASCRJ_LSP_SPEED_SET_rel#0 (>L:ASCRJ_LSP_SPEED_SEL_ANIM)
ASCRJ_LSP_DH#0 (>L:ASCRJ_LSP_HEIGHT_MODE)
ASCRJ_LSP_MDA#1 (>L:ASCRJ_LSP_HEIGHT_MODE)
ASCRJ_LSP_HEIGHT_SEL_right#1 (>L:ASCRJ_LSP_HEIGHT_SEL_CHANGE) (L:ASCRJ_LSP_HEIGHT_SEL) 350 < if{ 1 if{ (L:ASCRJ_LSP_HEIGHT_SEL) 10 + (>L:ASCRJ_LSP_HEIGHT_SEL) } } els{ (L:ASCRJ_LSP_HEIGHT_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_LSP_HEIGHT_SEL) } } }
ASCRJ_LSP_HEIGHT_SEL_left#-1 (>L:ASCRJ_LSP_HEIGHT_SEL_CHANGE) (L:ASCRJ_LSP_HEIGHT_SEL) 10 >= if{ 1 if{ (L:ASCRJ_LSP_HEIGHT_SEL) 10 - (>L:ASCRJ_LSP_HEIGHT_SEL) } } els{ (L:ASCRJ_LSP_HEIGHT_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_LSP_HEIGHT_SEL) } } }
ASCRJ_LSP_HEIGHT_SET#1 (>L:ASCRJ_LSP_HEIGHT_SET) 1 (>L:ASCRJ_LSP_HEIGHT_SEL_ANIM)
ASCRJ_LSP_HEIGHT_SET_rel#0 (>L:ASCRJ_LSP_HEIGHT_SEL_ANIM)
ASCRJ_LSP_HPAIN#1 (>L:ASCRJ_LSP_HPA_IN) 1 (>L:ASCRJ_LSP_HPA_IN_BTN_ANIM)
ASCRJ_LSP_HPAIN_rel#0 (>L:ASCRJ_LSP_HPA_IN_BTN_ANIM)
ASCRJ_LSP_BARO_right#1 (>L:ASCRJ_LSP_BARO_CHANGE) (L:ASCRJ_LSP_BARO_SEL) 350 < if{ 1 if{ (L:ASCRJ_LSP_BARO_SEL) 10 + (>L:ASCRJ_LSP_BARO_SEL) } } els{ (L:ASCRJ_LSP_BARO_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_LSP_BARO_SEL) } } }
ASCRJ_LSP_BARO_left#-1 (>L:ASCRJ_LSP_BARO_CHANGE) (L:ASCRJ_LSP_BARO_SEL) 10 >= if{ 1 if{ (L:ASCRJ_LSP_BARO_SEL) 10 - (>L:ASCRJ_LSP_BARO_SEL) } } els{ (L:ASCRJ_LSP_BARO_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_LSP_BARO_SEL) } } }
ASCRJ_LSP_BARO_STD#1 (>L:ASCRJ_LSP_BARO_STD) 1 (>L:ASCRJ_LSP_BARO_STD_BTN_ANIM)
ASCRJ_LSP_BARO_STD_rel#0 (>L:ASCRJ_LSP_BARO_STD_BTN_ANIM)
ASCRJ_FCP_CRS1_PLUS#1 (>L:ASCRJ_FCP_CRS1_CHANGE) (L:ASCRJ_FCP_CRS1_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_CRS1_SEL) 10 + (>L:ASCRJ_FCP_CRS1_SEL) } } els{ (L:ASCRJ_FCP_CRS1_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_CRS1_SEL) } } }
ASCRJ_FCP_CRS1_MINUS#-1 (>L:ASCRJ_FCP_CRS1_CHANGE) (L:ASCRJ_FCP_CRS1_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_CRS1_SEL) 10 - (>L:ASCRJ_FCP_CRS1_SEL) } } els{ (L:ASCRJ_FCP_CRS1_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_CRS1_SEL) } } }
ASCRJ_FCP_CRS1_DIRECT#1 (>L:ASCRJ_FCP_CRS1_DIRECT) 1 (>L:ASCRJ_FCP_CRS1_DIRECT_BTN_ANIM)
ASCRJ_FCP_CRS1_DIRECT_rel#0 (>L:ASCRJ_FCP_CRS1_DIRECT_BTN_ANIM)
ASCRJ_FCP_CRS2_PLUS#1 (>L:ASCRJ_FCP_CRS2_CHANGE) (L:ASCRJ_FCP_CRS2_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_CRS2_SEL) 10 + (>L:ASCRJ_FCP_CRS2_SEL) } } els{ (L:ASCRJ_FCP_CRS2_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_CRS2_SEL) } } }
ASCRJ_FCP_CRS2_MINUS#-1 (>L:ASCRJ_FCP_CRS2_CHANGE) (L:ASCRJ_FCP_CRS2_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_CRS2_SEL) 10 - (>L:ASCRJ_FCP_CRS2_SEL) } } els{ (L:ASCRJ_FCP_CRS2_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_CRS2_SEL) } } }
ASCRJ_FCP_CRS2_DIRECT#1 (>L:ASCRJ_FCP_CRS2_DIRECT) 1 (>L:ASCRJ_FCP_CRS2_DIRECT_BTN_ANIM)
ASCRJ_FCP_CRS2_DIRECT_rel#0 (>L:ASCRJ_FCP_CRS2_DIRECT_BTN_ANIM)
ASCRJ_FCP_FD#1 (>L:ASCRJ_FCP_FD1) 1 (>L:ASCRJ_FCP_FD1_BTN_ANIM)
ASCRJ_FCP_XFR#1 (>L:ASCRJ_FCP_XFR) 1 (>L:ASCRJ_FCP_XFR_BTN_ANIM)
ASCRJ_FCP_XFR_rel#0 (>L:ASCRJ_FCP_XFR_BTN_ANIM)
ASCRJ_FCP_TURB#1 (>L:ASCRJ_FCP_TURB) 1 (>L:ASCRJ_FCP_TURB_BTN_ANIM)
ASCRJ_FCP_TURB_rel#0 (>L:ASCRJ_FCP_TURB_BTN_ANIM)
ASCRJ_FCP_SPEED#1 (>L:ASCRJ_FCP_SPEED) 1 (>L:ASCRJ_FCP_SPEED_BTN_ANIM)
ASCRJ_FCP_SPEED_rel#0 (>L:ASCRJ_FCP_SPEED_BTN_ANIM)
ASCRJ_FCP_IAS_MACH#1 (>L:ASCRJ_FCP_IAS_MACH) 1 (>L:ASCRJ_FCP_IAS_MACH_BTN_ANIM)
ASCRJ_FCP_IAS_MACH_rel#0 (>L:ASCRJ_FCP_IAS_MACH_BTN_ANIM)
ASCRJ_FCP_SPEED_plus#1 (>L:ASCRJ_FCP_SPEED_CHANGE) (L:ASCRJ_FCP_SPEED_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_SPEED_SEL) 10 + (>L:ASCRJ_FCP_SPEED_SEL) } } els{ (L:ASCRJ_FCP_SPEED_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_SPEED_SEL) } } }
ASCRJ_FCP_SPEED_plus10#2 (>L:ASCRJ_FCP_SPEED_CHANGE) (L:ASCRJ_FCP_SPEED_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_SPEED_SEL) 10 + (>L:ASCRJ_FCP_SPEED_SEL) } } els{ (L:ASCRJ_FCP_SPEED_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_SPEED_SEL) } } }
ASCRJ_FCP_SPEED_minus#-1 (>L:ASCRJ_FCP_SPEED_CHANGE) (L:ASCRJ_FCP_SPEED_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_SPEED_SEL) 10 - (>L:ASCRJ_FCP_SPEED_SEL) } } els{ (L:ASCRJ_FCP_SPEED_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_SPEED_SEL) } } }
ASCRJ_FCP_SPEED_minus10#-2 (>L:ASCRJ_FCP_SPEED_CHANGE) (L:ASCRJ_FCP_SPEED_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_SPEED_SEL) 10 - (>L:ASCRJ_FCP_SPEED_SEL) } } els{ (L:ASCRJ_FCP_SPEED_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_SPEED_SEL) } } }
ASCRJ_FCP_APPR#1 (>L:ASCRJ_FCP_APPR) 1 (>L:ASCRJ_FCP_APPR_BTN_ANIM)
ASCRJ_FCP_APPR_rel#0 (>L:ASCRJ_FCP_APPR_BTN_ANIM)
ASCRJ_FCP_BC#1 (>L:ASCRJ_FCP_BC) 1 (>L:ASCRJ_FCP_BC_BTN_ANIM)
ASCRJ_FCP_BC_rel#0 (>L:ASCRJ_FCP_BC_BTN_ANIM)
ASCRJ_FCP_HDG#1 (>L:ASCRJ_FCP_HDG) 1 (>L:ASCRJ_FCP_HDG_BTN_ANIM)
ASCRJ_FCP_HDG_rel#0 (>L:ASCRJ_FCP_HDG_BTN_ANIM)
ASCRJ_FCP_HDG_SYNC#1 (>L:ASCRJ_FCP_HDG_SYNC) 1 (>L:ASCRJ_FCP_HDG_SYNC_BTN_ANIM)
ASCRJ_FCP_HDG_SYNC_rel#0 (>L:ASCRJ_FCP_HDG_SYNC_BTN_ANIM)
ASCRJ_FCP_HDG_INFO_plus1#1 (>L:ASCRJ_FCP_HDG_CHANGE) (L:ASCRJ_FCP_HDG_INFO) (>K:HEADING_BUG_SET) (L:ASCRJ_FCP_HDG_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_HDG_SEL) 10 + (>L:ASCRJ_FCP_HDG_SEL) } } els{ (L:ASCRJ_FCP_HDG_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_HDG_SEL) } } }
ASCRJ_FCP_HDG_INFO_plus10#2 (>L:ASCRJ_FCP_HDG_CHANGE) (L:ASCRJ_FCP_HDG_INFO) (>K:HEADING_BUG_SET) (L:ASCRJ_FCP_HDG_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_HDG_SEL) 10 + (>L:ASCRJ_FCP_HDG_SEL) } } els{ (L:ASCRJ_FCP_HDG_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_HDG_SEL) } } }
ASCRJ_FCP_HDG_INFO_minus10#-2 (>L:ASCRJ_FCP_HDG_CHANGE) (L:ASCRJ_FCP_HDG_INFO) (>K:HEADING_BUG_SET) (L:ASCRJ_FCP_HDG_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_HDG_SEL) 10 - (>L:ASCRJ_FCP_HDG_SEL) } } els{ (L:ASCRJ_FCP_HDG_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_HDG_SEL) } } }
ASCRJ_FCP_HDG_INFO_minus1#-1 (>L:ASCRJ_FCP_HDG_CHANGE) (L:ASCRJ_FCP_HDG_INFO) (>K:HEADING_BUG_SET) (L:ASCRJ_FCP_HDG_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_HDG_SEL) 10 - (>L:ASCRJ_FCP_HDG_SEL) } } els{ (L:ASCRJ_FCP_HDG_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_HDG_SEL) } } }
ASCRJ_FCP_NAV#1 (>L:ASCRJ_FCP_NAV) 1 (>L:ASCRJ_FCP_NAV_BTN_ANIM)
ASCRJ_FCP_NAV_rel#0 (>L:ASCRJ_FCP_NAV_BTN_ANIM)
ASCRJ_FCP_12BANK#1 (>L:ASCRJ_FCP_12BANK) 1 (>L:ASCRJ_FCP_12BANK_BTN_ANIM)
ASCRJ_FCP_12BANK_rel#0 (>L:ASCRJ_FCP_12BANK_BTN_ANIM)
ASCRJ_FCP_ALT#1 (>L:ASCRJ_FCP_ALT) 1 (>L:ASCRJ_FCP_ALT_BTN_ANIM)
ASCRJ_FCP_ALT_rel#0 (>L:ASCRJ_FCP_ALT_BTN_ANIM)
ASCRJ_FCP_ALT_INFO_plus100#1 (>L:ASCRJ_FCP_ALT_CHANGE) (L:ASCRJ_FCP_ALT_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_ALT_SEL) 10 + (>L:ASCRJ_FCP_ALT_SEL) } } els{ (L:ASCRJ_FCP_ALT_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_ALT_SEL) } } }
ASCRJ_FCP_ALT_INFO_plus1000#2 (>L:ASCRJ_FCP_ALT_CHANGE) (L:ASCRJ_FCP_ALT_SEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_ALT_SEL) 10 + (>L:ASCRJ_FCP_ALT_SEL) } } els{ (L:ASCRJ_FCP_ALT_SEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_ALT_SEL) } } }
ASCRJ_FCP_ALT_INFO_minus1000#-2 (>L:ASCRJ_FCP_ALT_CHANGE) (L:ASCRJ_FCP_ALT_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_ALT_SEL) 10 - (>L:ASCRJ_FCP_ALT_SEL) } } els{ (L:ASCRJ_FCP_ALT_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_ALT_SEL) } } }
ASCRJ_FCP_ALT_INFO_minus100#-1 (>L:ASCRJ_FCP_ALT_CHANGE) (L:ASCRJ_FCP_ALT_SEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_ALT_SEL) 10 - (>L:ASCRJ_FCP_ALT_SEL) } } els{ (L:ASCRJ_FCP_ALT_SEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_ALT_SEL) } } }
ASCRJ_FCP_ALT_CANCEL#1 (>L:ASCRJ_FCP_ALT_CANCEL) 1 (>L:ASCRJ_FCP_ALT_CANCEL_BTN_ANIM)
ASCRJ_FCP_ALT_CANCEL_rel#0 (>L:ASCRJ_FCP_ALT_CANCEL_BTN_ANIM)
ASCRJ_FCP_VS#1 (>L:ASCRJ_FCP_VS) 1 (>L:ASCRJ_FCP_VS_BTN_ANIM)
ASCRJ_FCP_VS_rel#0 (>L:ASCRJ_FCP_VS_BTN_ANIM)
ASCRJ_FCP_WHEEL_up#1 (>L:ASCRJ_FCP_WHEEL_CHANGE) (L:ASCRJ_FCP_WHEEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_WHEEL) 10 + (>L:ASCRJ_FCP_WHEEL) } } els{ (L:ASCRJ_FCP_WHEEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_WHEEL) } } }
ASCRJ_FCP_WHEEL_up2#10 (>L:ASCRJ_FCP_WHEEL_CHANGE) (L:ASCRJ_FCP_WHEEL) 350 < if{ 1 if{ (L:ASCRJ_FCP_WHEEL) 10 + (>L:ASCRJ_FCP_WHEEL) } } els{ (L:ASCRJ_FCP_WHEEL) 350 >= if{ 1 if{ 0 (>L:ASCRJ_FCP_WHEEL) } } }
ASCRJ_FCP_WHEEL_down#-1 (>L:ASCRJ_FCP_WHEEL_CHANGE) (L:ASCRJ_FCP_WHEEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_WHEEL) 10 - (>L:ASCRJ_FCP_WHEEL) } } els{ (L:ASCRJ_FCP_WHEEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_WHEEL) } } }
ASCRJ_FCP_WHEEL_down2#-10 (>L:ASCRJ_FCP_WHEEL_CHANGE) (L:ASCRJ_FCP_WHEEL) 10 >= if{ 1 if{ (L:ASCRJ_FCP_WHEEL) 10 - (>L:ASCRJ_FCP_WHEEL) } } els{ (L:ASCRJ_FCP_WHEEL) 10 < if{ 1 if{ 350 (>L:ASCRJ_FCP_WHEEL) } } }
ASCRJ_HGS_TOGGLE#(L:ASCRJ_HGS_COMBINER_SET, Bool) ! (>L:ASCRJ_HGS_COMBINER_SET)
ASCRJ_NAV1_OUTER_MINUS#1 (>L:ASCRJ_RTU1_LSK1L) 1 (>L:ASCRJ_RTU1_LSK2L) -1 (>L:ASCRJ_RTU1_KNOB_OUTER_CHANGE)
ASCRJ_NAV1_OUTER_PLUS#1 (>L:ASCRJ_RTU1_LSK1L) 1 (>L:ASCRJ_RTU1_LSK2L) 1 (>L:ASCRJ_RTU1_KNOB_OUTER_CHANGE)
ASCRJ_NAV1_INNER_MINUS#1 (>L:ASCRJ_RTU1_LSK1L) 1 (>L:ASCRJ_RTU1_LSK2L) -1 (>L:ASCRJ_RTU1_KNOB_INNER_CHANGE)
ASCRJ_NAV1_INNER_PLUS#1 (>L:ASCRJ_RTU1_LSK1L) 1 (>L:ASCRJ_RTU1_LSK2L) 1 (>L:ASCRJ_RTU1_KNOB_INNER_CHANGE)
ASCRJ_NAV2_OUTER_MINUS#1 (>L:ASCRJ_RTU2_LSK1L) 1 (>L:ASCRJ_RTU2_LSK2L) -1 (>L:ASCRJ_RTU2_KNOB_OUTER_CHANGE)
ASCRJ_NAV2_OUTER_PLUS#1 (>L:ASCRJ_RTU2_LSK1L) 1 (>L:ASCRJ_RTU2_LSK2L) 1 (>L:ASCRJ_RTU2_KNOB_OUTER_CHANGE)
ASCRJ_NAV2_INNER_MINUS#1 (>L:ASCRJ_RTU2_LSK1L) 1 (>L:ASCRJ_RTU2_LSK2L) -1 (>L:ASCRJ_RTU2_KNOB_INNER_CHANGE)
ASCRJ_NAV2_INNER_PLUS#1 (>L:ASCRJ_RTU2_LSK1L) 1 (>L:ASCRJ_RTU2_LSK2L) 1 (>L:ASCRJ_RTU2_KNOB_INNER_CHANGE)
// IFE MB-339
IFE_MB339_LANDING_LIGHTS#(L:SwitchLandingTaxi) 1 == if{ 1 if{ 0 (>L:SwitchLandingTaxi) } } els{ (L:SwitchLandingTaxi) 1 != if{ 1 if{ 1 (>L:SwitchLandingTaxi) } } }
IFE_MB339_TAXI_LIGHTS#(L:SwitchLandingTaxi) 2 == if{ 1 if{ 0 (>L:SwitchLandingTaxi) } } els{ (L:SwitchLandingTaxi) 2 != if{ 1 if{ 2 (>L:SwitchLandingTaxi) } } }
IFE_MB339_HUD#(L:SwitchGeneric11,bool) ! (>L:SwitchGeneric11,bool)
IFE_MB339_TACAN#(L:HSIMode) 2 == if{ 1 if{ 99 (>L:HSIMode) } } els{ (L:HSIMode) 2 != if{ 1 if{ 2 (>L:HSIMode) } } }
IFE_MB339_VOR#(L:HSIMode) 0 == if{ 1 if{ 99 (>L:HSIMode) } } els{ (L:HSIMode) 0 != if{ 1 if{ 0 (>L:HSIMode) } } }
IFE_MB339_RNAV#(L:HSIMode) 1 == if{ 1 if{ 99 (>L:HSIMode) } } els{ (L:HSIMode) 1 != if{ 1 if{ 1 (>L:HSIMode) } } }
IFE_MB339_FLT_DIR_STBY#1 (>L:FDModeSTBY) 0 (>L:FDModeGS) 0 (>L:FDModeGSARM) 0 (>L:FDModeCD)
IFE_MB339_FLT_DIR_GS#(L:FDModeGS) 1 == if{ (L:FDModeCD) 0 > if{ 0 (>L:FDModeGS) } els{ 0 (>L:FDModeGS) 1 (>L:FDModeSTBY) } } els{ 1 (>L:FDModeGS) 0 (>L:FDModeSTBY) 0 (>L:FDModeGSARM) }
IFE_MB339_FLT_DIR_ALT_HOLD#(L:FDModeGS) 2 == if{ (L:FDModeGSARM) 1 == or (L:FDModeCD) 0 > if{ 0 (>L:FDModeGS) } els{ 0 (>L:FDModeGS) 1 (>L:FDModeSTBY) } } els{ 2 (>L:FDModeGS) 0 (>L:FDModeSTBY) }
IFE_MB339_GSARM#(L:FDModeGSARM) 1 == if{ (L:FDModeCD) 0 == if{ 0 (>L:FDModeGSARM) 1 (>L:FDModeSTBY) 0 (>L:FDModeGS) } els{ 0 (>L:FDModeGSARM) 0 (>L:FDModeGS) } } els{ 1 (>L:FDModeGSARM) 0 (>L:FDModeSTBY) 0 (>L:FDModeGS) }
IFE_MB339_RADIO_NAV#(L:FDModeCD) 2 == if{ (L:FDModeGSARM) 0 == (L:FDModeGS) == 0  and if{ 0 (>L:FDModeCD) 1 (>L:FDModeSTBY) } els{ 0 (>L:FDModeCD) } } els{ 2 (>L:FDModeCD) 0 (>L:FDModeSTBY) }
IFE_MB339_HDG#(L:FDModeCD) 1 == if{ (L:FDModeGSARM) 0 == (L:FDModeGS) 0 == and if{ 0 (>L:FDModeCD) 1 (>L:FDModeSTBY) } els{ 0 (>L:FDModeCD) } } els{ 1 (>L:FDModeCD) 0 (>L:FDModeSTBY) }
// MILVIZ CORSAIR
MV_COR_OIL_COOLER_MINUS#69721 (>L:EVENTS_ID)
MV_COR_OIL_COOLER_PLUS#69720 (>L:EVENTS_ID)
MV_COR_INTERCOOLER_MINUS#69723 (>L:EVENTS_ID)
MV_COR_INTERCOOLER_PLUS#69722 (>L:EVENTS_ID)
MV_COR_COWL_FLAP_MINUS#69725 (>L:EVENTS_ID)
MV_COR_COWL_FLAP_PLUS#69724 (>L:EVENTS_ID)
MV_COR_LOCK_TAILWHEEL#69636 (>L:EVENTS_ID)
MV_COR_FUEL_MAIN#1 (>L:FG1D013)
MV_COR_FUEL_RESERVE#2 (>L:FG1D013)
MV_COR_FUEL_RH#3 (>L:FG1D013)
MV_COR_FUEL_LH#4 (>L:FG1D013)
MV_COR_FUEL_CENTER#5 (>L:FG1D013)
MV_COR_FUEL_OFF#0 (>L:FG1D013)
MV_COR_GUN_LIGHT#0 (>L:FG1D085)
MV_COR_GUN_OFF#1 (>L:FG1D085)
MV_COR_GUN_ALT#2 (>L:FG1D085)
MV_COR_FUEL_PUMP_TOGGLE#69737 (>L:EVENTS_ID)
MV_COR_SUPERCHARGER_PLUS#69658 (>L:EVENTS_ID)
MV_COR_SUPERCHARGER_MINUS#69659 (>L:EVENTS_ID)
MV_COR_HEADING_PLUS#69688 (>L:EVENTS_ID)
MV_COR_HEADING_MINUS#69689 (>L:EVENTS_ID)
MV_COR_BCN_DOWN#0 (>L:FG1D110)
MV_COR_BCN_OFF#1 (>L:FG1D110)
MV_COR_BCN_RED#2 (>L:FG1D110)
MV_COR_RECOGN_STEADY#0 (>L:FG1D111)
MV_COR_RECOGN_OFF#1 (>L:FG1D111)
MV_COR_RECOGN_FLASH#2 (>L:FG1D111)
MV_COR_LANDING_ON#0 (>L:FG1D196)
MV_COR_LANDING_OFF#1 (>L:FG1D196)
MV_COR_LANDING_AMBER#2 (>L:FG1D196)
MV_COR_EXT_STEADY#0 (>L:FG1D124)
MV_COR_EXT_OFF#1 (>L:FG1D124)
MV_COR_EXT_FLASH#2 (>L:FG1D124)
MV_COR_WING_BRIGHT#0 (>L:FG1D125)
MV_COR_WING_OFF#1 (>L:FG1D125)
MV_COR_WING_DIM#2 (>L:FG1D125)
MV_COR_TAIL_BRIGHT#0 (>L:FG1D126)
MV_COR_TAIL_OFF#1 (>L:FG1D126)
MV_COR_TAIL_DIM#2 (>L:FG1D126)
MV_COR_FORM_BRIGHT#0 (>L:FG1D127)
MV_COR_FORM_OFF#1 (>L:FG1D127)
MV_COR_FORM_DIM#2 (>L:FG1D127)
MV_COR_SECTION_BRIGHT#0 (>L:FG1D128)
MV_COR_SECTION_OFF#1 (>L:FG1D128)
MV_COR_SECTION_DIM#2 (>L:FG1D128)
MV_COR_SECSEL_BRIGHT#0 (>L:FG1D129)
MV_COR_SECSEL_OFF#1 (>L:FG1D129)
MV_COR_SECSEL_DIM#2 (>L:FG1D129)
MV_COR_APP_ON#1 (>L:FG1D130)
MV_COR_APP_OFF#0 (>L:FG1D130)
MV_COR_APP_TOGGLE#(L:FG1D130) ! (>L:FG1D130)
MV_COR_COCKPIT_ON#1 (>L:FG1D131)
MV_COR_COCKPIT_OFF#0 (>L:FG1D131)
MV_COR_COCKPIT_TOGGLE#69755 (>L:EVENTS_ID)
MV_COR_CHART_PLUS#69756 (>L:EVENTS_ID)
MV_COR_CHART_MINUS#69757 (>L:EVENTS_ID)
MV_COR_LPANEL_PLUS#69758 (>L:EVENTS_ID)
MV_COR_LPANEL_MINUS#69759 (>L:EVENTS_ID)
MV_COR_RPANEL_PLUS#69760 (>L:EVENTS_ID)
MV_COR_RPANEL_MINUS#69761 (>L:EVENTS_ID)
MV_COR_LINST_PLUS#69762 (>L:EVENTS_ID)
MV_COR_LINST_MINUS#69763 (>L:EVENTS_ID)
MV_COR_RINST_PLUS#69764 (>L:EVENTS_ID)
MV_COR_RINST_MINUS#69765 (>L:EVENTS_ID)
MV_COR_DEFROST_TOGGLE#69766 (>L:EVENTS_ID)
MV_COR_PITOT_HEAT_TOGGLE#69767 (>L:EVENTS_ID)
MV_COR_RECPT#69768 (>L:EVENTS_ID)
// IFE T-45C
IFE_T45C_TAILHOOK#(L:lever_tailhook_position) ! (>L:lever_tailhook_position)
IFE_T45C_MFD1SK1#1 (>L:MFD1SK1)
IFE_T45C_MFD1SK2#1 (>L:MFD1SK2)
IFE_T45C_MFD1SK3#1 (>L:MFD1SK3)
IFE_T45C_HUD_BRT#(L:HUD_Color_Switch) ! (>L:HUD_Color_Switch)
IFE_T45C_HUD_AUTO_DAY#(L:HUD_Color_BRT) ! (>L:HUD_Color_BRT)
IFE_T45C_HUD_POWER#(L:HUDPower) ! (>L:HUDPower)
IFE_T45C_HUD_1#1 (>L:UFCPButton1)
IFE_T45C_HUD_DEP_PLUS#(L:Weapon_DEP) 5 + (>L:Weapon_DEP)
// PMDG DC-6
PMDG_DC6_AFE_BEFORE_START#0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeBeforeStart, bool) ! (>L:AfeBeforeStart, bool) 1 (L:AfeBeforeStart, bool) ! if{ 7 (>K:ROTOR_BRAKE) } els{ 8 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_AFTER_START#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeAfterStart, bool) ! (>L:AfeAfterStart, bool) 1 (L:AfeAfterStart, bool) ! if{ 9 (>K:ROTOR_BRAKE) } els{ 10 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_BEFORE_TAKEOFF#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeBeforeTakeoff, bool) ! (>L:AfeBeforeTakeoff, bool) 1 (L:AfeBeforeTakeoff, bool) ! if{ 11 (>K:ROTOR_BRAKE) } els{ 12 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_TAKEOFF_DRY#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeTakeoffDry, bool) ! (>L:AfeTakeoffDry, bool) 1 (L:AfeTakeoffDry, bool) ! if{ 13 (>K:ROTOR_BRAKE) } els{ 14 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_TAKEOFF_WET#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeTakeoffWet, bool) ! (>L:AfeTakeoffWet, bool) 1 (L:AfeTakeoffWet, bool) ! if{ 15 (>K:ROTOR_BRAKE) } els{ 16 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_CRUISE#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeCruise, bool) ! (>L:AfeCruise, bool) 1 (L:AfeCruise, bool) ! if{ 17 (>K:ROTOR_BRAKE) } els{ 18 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_DESCENT#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeDescent, bool) ! (>L:AfeDescent, bool) 1 (L:AfeDescent, bool) ! if{ 19 (>K:ROTOR_BRAKE) } els{ 20 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_INRANGE#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeInrange, bool) ! (>L:AfeInrange, bool) 1 (L:AfeInrange, bool) ! if{ 21 (>K:ROTOR_BRAKE) } els{ 22 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_BEFORE_LANDING#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeBeforeLanding, bool) ! (>L:AfeBeforeLanding, bool) 1 (L:AfeBeforeLanding, bool) ! if{ 23 (>K:ROTOR_BRAKE) } els{ 24 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_AFTER_LANDING#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeParking, bool) 0 (L:AfeAfterLanding, bool) ! (>L:AfeAfterLanding, bool) 1 (L:AfeAfterLanding, bool) ! if{ 25 (>K:ROTOR_BRAKE) } els{ 26 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_PARKING#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (L:AfeParking, bool) ! (>L:AfeParking, bool) 1 (L:AfeParking, bool) ! if{ 27 (>K:ROTOR_BRAKE) } els{ 28 (>K:ROTOR_BRAKE) }
PMDG_DC6_AFE_ABORT#0 (>L:AfeBeforeStart, bool) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInrange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 29 (>K:ROTOR_BRAKE)
PMDG_DC6_ADF_INNER_PLUS#(L:ADFInnerIncrease, number) 1 + (>L:ADFInnerIncrease, number) (L:ADFInnerIncrease, number) 9 > if{ 0 (>L:ADFInnerIncrease, number) } (L:ADFInnerIncrease, number) 0 < if{ 9 (>L:ADFInnerIncrease, number) } (L:dc6_140_obj, number) 1 + (>L:dc6_140_obj, number) (L:dc6_140_obj, number) 99 > if{ 0 (>L:dc6_140_obj, number) } (L:dc6_140_obj, number) 0 < if{ 99 (>L:dc6_140_obj, number) }
PMDG_DC6_ADF_INNER_MINUS#(L:ADFInnerDecrease, number) 1 + (>L:ADFInnerDecrease, number) (L:ADFInnerDecrease, number) 9 > if{ 0 (>L:ADFInnerDecrease, number) } (L:ADFInnerDecrease, number) 0 < if{ 9 (>L:ADFInnerDecrease, number) } (L:dc6_140_obj, number) 1 - (>L:dc6_140_obj, number) (L:dc6_140_obj, number) 99 > if{ 99 (>L:dc6_140_obj, number) }
PMDG_DC6_ADF_OUTER_PLUS#(L:ADFOuterIncrease, number) 1 + (>L:ADFOuterIncrease, number) (L:ADFOuterIncrease, number) 9 > if{ 0 (>L:ADFOuterIncrease, number) } (L:ADFOuterIncrease, number) 0 < if{ 9 (>L:ADFOuterIncrease, number) } (L:dc6_139_obj, number) 1 + (>L:dc6_139_obj, number) (L:dc6_139_obj, number) 99 > if{ 0 (>L:dc6_139_obj, number) } (L:dc6_139_obj, number) 0 < if{ 99 (>L:dc6_139_obj, number) }
PMDG_DC6_ADF_OUTER_MINUS#(L:ADFOuterDecrease, number) 1 + (>L:ADFOuterDecrease, number) (L:ADFOuterDecrease, number) 9 > if{ 0 (>L:ADFOuterDecrease, number) } (L:ADFOuterDecrease, number) 0 < if{ 9 (>L:ADFOuterDecrease, number) } (L:dc6_139_obj, number) 1 - (>L:dc6_139_obj, number) (L:dc6_139_obj, number) 99 > if{ 99 (>L:dc6_139_obj, number) }
PMDG_DC6_ADF_FREQ_SWITCH#(L:ADFFreqXfer, number) 1 + (>L:ADFFreqXfer, number) (L:ADFFreqXfer, number) 9 > if{ 0 (>L:ADFFreqXfer, number) } (L:ADFFreqXfer, number) 0 < if{ 9 (>L:ADFFreqXfer, number) } 0 (L:dc6_135_obj, bool) ! (>L:dc6_135_obj, bool) 1
PMDG_DC6_ADF_MODE_TOGGLE#0 (L:dc6_133_obj,bool) ! (>L:dc6_133_obj,bool) 1
PMDG_DC6_ADF1_MODE#0 (>L:dc6_133_obj,bool)
PMDG_DC6_ADF2_MODE#1 (>L:dc6_133_obj,bool)
PMDG_DC6_DME_1#1 (>L:dc6_271_obj, enum)
PMDG_DC6_DME_2#3 (>L:dc6_271_obj, enum)
PMDG_DC6_AP_MECHANICAL#404 100 * (>L:SwitchID, number) (L:SwitchID, number) 1 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_GYRO_PILOT#434 100 * (>L:SwitchID, number) (L:SwitchID, number) 1 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_ALTITUDE_CONTROL#436 100 * (>L:SwitchID, number) (L:SwitchID, number) 1 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_GYRO_PILOT_MODE_PLUS#445 100 * (>L:SwitchID, number) (L:SwitchID, number) 7 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_GYRO_PILOT_MODE_MINUS#445 100 * (>L:SwitchID, number) (L:SwitchID, number) 8 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_AP_TURN_PLUS#442 100 * (>L:SwitchID, number) (L:SwitchID, number) 7 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_AP_TURN_MINUS#442 100 * (>L:SwitchID, number) (L:SwitchID, number) 8 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_AP_AILERON_PLUS#435 100 * (>L:SwitchID, number) (L:SwitchID, number) 7 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_AP_AILERON_MINUS#435 100 * (>L:SwitchID, number) (L:SwitchID, number) 8 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_AP_CLIMB_PLUS#440 100 * (>L:SwitchID, number) (L:SwitchID, number) 7 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_AP_CLIMB_MINUS#440 100 * (>L:SwitchID, number) (L:SwitchID, number) 8 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
PMDG_DC6_GUST_LOCK#398 100 * (>L:SwitchID, number) (L:SwitchID, number) 1 + (>L:SwitchID, number) (L:SwitchID, number) (>K:ROTOR_BRAKE)
//FBW A32NX
FBW_A32NX_DEV_FCU_SPD_PUSH#(>H:A320_Neo_FCU_SPEED_PUSH)
FBW_A32NX_DEV_FCU_SPD_PULL#(>H:A320_Neo_FCU_SPEED_PULL)
FBW_A32NX_DEV_FCU_HDG_PUSH#(>H:A320_Neo_FCU_HDG_PUSH)
FBW_A32NX_DEV_FCU_HDG_PULL#(>H:A320_Neo_FCU_HDG_PULL)
FBW_A32NX_DEV_FCU_ALT_PUSH#(>H:A320_Neo_FCU_ALT_PUSH) (>H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE)
FBW_A32NX_DEV_FCU_ALT_PULL#(>H:A320_Neo_FCU_ALT_PULL) (>H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE)
FBW_A32NX_DEV_FCU_VS_PUSH#(>H:A320_Neo_FCU_VS_PUSH) (>H:A320_Neo_CDU_VS)
FBW_A32NX_DEV_FCU_VS_PULL#(>H:A320_Neo_FCU_VS_PULL) (>H:A320_Neo_CDU_VS)
FBW_A32NX_DEV_AP1_TOGGLE#(>H:A320_Neo_FCU_AP_1_PUSH)
FBW_A32NX_DEV_FCU_LOC#(>H:A320_Neo_FCU_LOC_PUSH)
FBW_A32NX_DEV_FCU_APPR#(>H:A320_Neo_FCU_APPR_PUSH)
FBW_A32NX_DEV_FCU_EXPED#(>H:A320_Neo_FCU_EXPED_PUSH)
FBW_A32NX_DEV_FCU_VS_INC#(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_VS_INC_FPA) } els{ (>H:A320_Neo_FCU_VS_INC_VS) } (>H:A320_Neo_CDU_VS)
FBW_A32NX_DEV_FCU_VS_DEC#(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_VS_DEC_FPA) } els{ (>H:A320_Neo_FCU_VS_DEC_VS) } (>H:A320_Neo_CDU_VS)
FBW_A32NX_DEV_FCU_HDG_TRK_INC#(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_HDG_INC_TRACK) } els{ (>H:A320_Neo_FCU_HDG_INC_HEADING) }
FBW_A32NX_DEV_FCU_HDG_TRK_DEC#(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_HDG_DEC_TRACK) } els{ (>H:A320_Neo_FCU_HDG_DEC_HEADING) }
FBW_A32NX_DEV_FCU_SPD_INC#(>H:A320_Neo_FCU_SPEED_INC)
FBW_A32NX_DEV_FCU_SPD_DEC#(>H:A320_Neo_FCU_SPEED_DEC)
FBW_A32NX_DEV_FCU_ALT_INC#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)
FBW_A32NX_DEV_FCU_ALT_DEC#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) - (L:XMLVAR_Autopilot_Altitude_Increment) (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - (L:XMLVAR_Autopilot_Altitude_Increment) % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)
FBW_A32NX_DEV_FCU_CSTR_L#(>H:A320_Neo_MFD_BTN_CSTR_1) (>H:A320_Neo_PFD_BTN_CSTR_1)
FBW_A32NX_DEV_FCU_WPT_L#(>H:A320_Neo_MFD_BTN_WPT_1) (>H:A320_Neo_PFD_BTN_WPT_1)
FBW_A32NX_DEV_FCU_VORD_L#(>H:A320_Neo_MFD_BTN_VORD_1) (>H:A320_Neo_PFD_BTN_VORD_1)
FBW_A32NX_DEV_FCU_NDB_L#(>H:A320_Neo_MFD_BTN_NDB_1) (>H:A320_Neo_PFD_BTN_NDB_1)
FBW_A32NX_DEV_FCU_ARPT_L#(>H:A320_Neo_MFD_BTN_ARPT_1) (>H:A320_Neo_PFD_BTN_ARPT_1)
FBW_A32NX_DEV_FCU_LS_L#(>H:A320_Neo_MFD_BTN_LS_1) (>H:A320_Neo_PFD_BTN_LS_1)
FBW_A32NX_DEV_OVHD_ANTIICE_ENG1#(>K:ANTI_ICE_TOGGLE_ENG1) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)
FBW_A32NX_DEV_OVHD_ANTIICE_ENG2#(>K:ANTI_ICE_TOGGLE_ENG2) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)
FBW_A32NX_DEV_OVHD_ANTIICE_WING#(>K:TOGGLE_STRUCTURAL_DEICE) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed)
FBW_A32NX_DEV_OVHD_PROBESWINDOW#(L:A32NX_MAN_PITOT_HEAT, Bool) ! (>L:A32NX_MAN_PITOT_HEAT, Bool) (L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed)
FBW_A32NX_DEV_OVHD_STROBE_OFF#2 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)
FBW_A32NX_DEV_OVHD_STROBE_AUTO#1 (>L:LIGHTING_STROBE_0) 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)
FBW_A32NX_DEV_OVHD_STROBE_ON#0 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)
FBW_A32NX_DEV_OVHD_LAND_L_ON#2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_LAND_L_OFF#1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_LAND_L_RETRACT#0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_LAND_R_ON#2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_LAND_R_OFF#1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_LAND_R_RETRACT#0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_NOSE_OFF#2 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_NOSE_TAXI#1 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 1 1 r (>K:2:TAXI_LIGHTS_SET)
FBW_A32NX_DEV_OVHD_NOSE_ON#0 (>L:LIGHTING_LANDING_1) 1 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
FBW_A32NX_STBL_OVHD_STROBE_OFF#2 (>L:LIGHTING_STROBE_1) 0 (>L:STROBE_1_Auto) 0 1 r (>K:2:STROBES_SET)
FBW_A32NX_STBL_OVHD_STROBE_AUTO#1 (>L:LIGHTING_STROBE_1) 1 (>L:STROBE_1_Auto) 1 1 r (>K:2:STROBES_SET)
FBW_A32NX_STBL_OVHD_STROBE_ON#0 (>L:LIGHTING_STROBE_1) 0 (>L:STROBE_1_Auto) 1 1 r (>K:2:STROBES_SET)
FBW_A32NX_STBL_FCU_HDG_PUSH#(>H:A320_Neo_CDU_MODE_MANAGED_HEADING) (>H:A320_Neo_FCU_MODE_MANAGED_HEADING)